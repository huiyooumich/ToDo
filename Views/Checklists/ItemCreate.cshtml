@model ToDo.Models.Item

@{
    ViewData["Title"] = "ItemCreate";
}

<h1>Item Create</h1>

<h4>Item</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ItemCreate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Done" /> @Html.DisplayNameFor(model => model.Done)
                </label>
            </div>
            
            <div class="form-group">
                <label asp-for="ChecklistId"></label>
                <select asp-for="ChecklistId">
                    <option value="5">FirstTable</option>
                    <option value="6">SecondTable</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="ItemCreate" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ItemIndex">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@if (false) {
<div class="form-group">
    <label asp-for="ChecklistId" class="control-label"></label>
    <select asp-for="ChecklistId" class="form-control" asp-items="ViewBag.ChecklistId"></select>
</div>
}

